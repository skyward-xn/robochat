<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:RoboChat.Converters"
    xmlns:behave="clr-namespace:RoboChat.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="RoboChat.ChatView"
    x:Name="ChatViewElement"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    Title="{Binding ChatContact.Name}" Tag="{Binding ChatContact.ID}" Width="640" HorizontalAlignment="Left" VerticalAlignment="Top" Height="480" Icon="/RoboChat;component/RoboChat32.ico" Drop="ChatViewElement_Drop" AllowDrop="True">
    <Window.InputBindings>
        <KeyBinding Command="{Binding Close}" CommandParameter="{Binding ElementName=ChatViewElement}" Key="Escape"/>
        <KeyBinding Command="{Binding Find}" Key="F" Modifiers="Control" />
        <KeyBinding Command="{Binding Print}" Key="P" Modifiers="Control" />
    </Window.InputBindings>
    <Window.Resources>
        <conv:BoolToVisibilityConverter x:Key="VisibilityConverter" TrueValue="Visible" FalseValue="Collapsed" />
        <conv:BoolToModifierKeysConverter x:Key="ModifierKeysConverter" TrueValue="Control" FalseValue="" />
        <conv:BoolToModifierKeysConverter x:Key="InverseModifierKeysConverter" TrueValue="" FalseValue="Control" />
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding Activated}" CommandParameter="{Binding ElementName=ChatViewElement}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="StateChanged">
            <i:InvokeCommandAction Command="{Binding StateChanged}" CommandParameter="{Binding ElementName=ChatViewElement}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding Deactivated}" CommandParameter="{Binding ElementName=ChatViewElement}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding Closed}" CommandParameter="{Binding ElementName=ChatViewElement}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Loaded}" CommandParameter="{Binding ElementName=ChatViewElement}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Chat" Padding="10,5">
                <MenuItem Header="History" Command="{Binding History}"/>
                <Separator />
                <MenuItem Header="Close" Command="{Binding Close}" CommandParameter="{Binding ElementName=ChatViewElement}"/>
            </MenuItem>
        </Menu>
        <DockPanel Margin="10,1,10,10">
            <DockPanel DockPanel.Dock="Bottom" LastChildFill="False">
                <DockPanel DockPanel.Dock="Right">
                    <Button Height="24" Margin="0,2,10,2" Command="{Binding Encrypt}" 
                            Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                        <Image Source="{Binding ChatContact.EncryptionImage}" />
                    </Button>
                    <Button Height="30" Command="{Binding Send}"  VerticalAlignment="Bottom" Margin="0,2,0,2" Background="{x:Null}" IsEnabled="{Binding ChatContact.EnableSend}">
                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="5,0">
                            <TextBlock DockPanel.Dock="Left" HorizontalAlignment="Left" FontWeight="Bold" VerticalAlignment="Center" Margin="0,0,10,0"><Run Text="Send"/></TextBlock>
                            <Border BorderThickness="1" BorderBrush="#FF8E44AD" CornerRadius="5" Padding="3,0" Visibility="{Binding SettingsInstance.UseCtrlInSendKey, Converter={StaticResource VisibilityConverter}}">
                                <TextBlock FontWeight="Bold" Foreground="#FF8E44AD"><Run Text="Ctrl"/></TextBlock>
                            </Border>
                            <TextBlock Foreground="#FF8E44AD" Margin="3,0" Visibility="{Binding SettingsInstance.UseCtrlInSendKey, Converter={StaticResource VisibilityConverter}}"><Run Text="+"/></TextBlock>
                            <Border BorderThickness="1" BorderBrush="#FF8E44AD" CornerRadius="5" Padding="3,0">
                                <TextBlock FontWeight="Bold" Foreground="#FF8E44AD"><Run Text="Enter"/></TextBlock>
                            </Border>
                        </StackPanel>
                    </Button>
                </DockPanel>
                <Button Height="30" Command="{Binding Find}" VerticalAlignment="Bottom" Margin="0,2,10,2" Background="{x:Null}">
                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="5,0">
                        <TextBlock DockPanel.Dock="Left" HorizontalAlignment="Left" FontWeight="Bold" VerticalAlignment="Center" Margin="0,0,10,0"><Run Text="Find"/></TextBlock>
                        <Border BorderThickness="1" BorderBrush="#FF8E44AD" CornerRadius="5" Padding="3,0">
                            <TextBlock FontWeight="Bold" Foreground="#FF8E44AD"><Run Text="Ctrl"/></TextBlock>
                        </Border>
                        <TextBlock Foreground="#FF8E44AD" Margin="3,0"><Run Text="+"/></TextBlock>
                        <Border BorderThickness="1" BorderBrush="#FF8E44AD" CornerRadius="5" Padding="3,0">
                            <TextBlock FontWeight="Bold" Foreground="#FF8E44AD"><Run Text="F"/></TextBlock>
                        </Border>
                    </StackPanel>
                </Button>
                <Button Height="30" Command="{Binding Print}" VerticalAlignment="Bottom" Margin="0,2,10,2" Background="{x:Null}">
                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="5,0">
                        <TextBlock DockPanel.Dock="Left" HorizontalAlignment="Left" FontWeight="Bold" VerticalAlignment="Center" Margin="0,0,10,0"><Run Text="Print"/></TextBlock>
                        <Border BorderThickness="1" BorderBrush="#FF8E44AD" CornerRadius="5" Padding="3,0">
                            <TextBlock FontWeight="Bold" Foreground="#FF8E44AD"><Run Text="Ctrl"/></TextBlock>
                        </Border>
                        <TextBlock Foreground="#FF8E44AD" Margin="3,0"><Run Text="+"/></TextBlock>
                        <Border BorderThickness="1" BorderBrush="#FF8E44AD" CornerRadius="5" Padding="3,0">
                            <TextBlock FontWeight="Bold" Foreground="#FF8E44AD"><Run Text="P"/></TextBlock>
                        </Border>
                    </StackPanel>
                </Button>
            </DockPanel>
            <TextBox Text="{Binding TextOutgoing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="100" VerticalAlignment="Bottom" Margin="0,1,0,1" DockPanel.Dock="Bottom" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" AcceptsReturn="True" PreviewDragOver="TextBox_PreviewDragOver">
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding NewLine}" Key="Return" Modifiers="{Binding SettingsInstance.UseCtrlInSendKey, Converter={StaticResource InverseModifierKeysConverter}}" />
                    <KeyBinding Command="{Binding Send}" Key="Return" Modifiers="{Binding SettingsInstance.UseCtrlInSendKey, Converter={StaticResource ModifierKeysConverter}}" />
                    <KeyBinding Command="{Binding Paste}" Key="V" Modifiers="Ctrl" />
                </TextBox.InputBindings>
                <i:Interaction.Behaviors>
                    <behave:SelectionBehavior BindableSelectionStart="{Binding SelectionStart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BindableSelectionLength="{Binding SelectionLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <behave:InputBindingsBehavior/>
                </i:Interaction.Behaviors>
                <TextBox.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShouldFocus}" Value="True">
                                <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <StackPanel Height="30" Margin="0,1,0,1" Orientation="Horizontal" DockPanel.Dock="Bottom">
                <Button Margin="0,0,5,0" Command="{Binding Tag}" CommandParameter="Bold" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                    <Image Source="/Resources;component/images/bold.png"/>
                </Button>
                <Button Margin="0,0,5,0" Command="{Binding Tag}" CommandParameter="Italic" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                    <Image Source="/Resources;component/images/italic.png"/>
                </Button>
                <Button Margin="0,0,5,0" Command="{Binding Tag}" CommandParameter="Underline" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                    <Image Source="/Resources;component/images/underline.png"/>
                </Button>
                <Button Margin="0,0,5,0" Command="{Binding Smile}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                    <Grid>
                        <Image Source="/Resources;component/images/smile.png"/>
                        <Popup IsOpen="{Binding SmilePopupIsOpen}" StaysOpen="False">
                            <ListBox ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding SmileList}" SelectedItem="{Binding SmilePopupSelectedItem}" MaxHeight="300">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="7"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </Popup>
                    </Grid>
                </Button>
                <Button Margin="0,0,5,0" Command="{Binding Tag}" CommandParameter="Url" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                    <Image Source="/Resources;component/images/link.png"/>
                </Button>
                <Button Margin="0,0,5,0" Command="{Binding Quote}" CommandParameter="{Binding ElementName=FlowDocumentScrollViewerElement}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                    <Image Source="/Resources;component/images/quote.png"/>
                </Button>
                <Button Margin="0,0,5,0" Command="{Binding Attach}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                    <Image Source="/Resources;component/images/attach.png"/>
                </Button>
                <Button Margin="0,0,5,0" Command="{Binding Paste}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                    <Image Source="/Resources;component/images/paste.png"/>
                </Button>
            </StackPanel>
            <DockPanel Height="30" Margin="0,1,0,1" DockPanel.Dock="Top" LastChildFill="False">
                <Image Stretch="None" Source="{Binding ChatContact.IsOnlineImage}" DockPanel.Dock="Left" Margin="0,0,10,0"/>
                <TextBlock Text="{Binding ChatContact.Name}" ToolTip="{Binding ChatContact.Tooltip}" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                <Image Stretch="None" DockPanel.Dock="Right" Source="{Binding ChatContact.Avatar}"/>
            </DockPanel>
            <Border Margin="0,1,0,1" BorderThickness="1" BorderBrush="#FFABADB3">
                <FlowDocumentScrollViewer VerticalScrollBarVisibility="Auto" x:Name="FlowDocumentScrollViewerElement" RenderOptions.EdgeMode="Aliased" PreviewDragOver="FlowDocumentScrollViewerElement_PreviewDragOver">
                    <FlowDocument PagePadding="5" >
                        <Table CellSpacing="0">
                            <Table.Columns>
                                <TableColumn Width="60" />
                                <TableColumn Width="16" />
                                <TableColumn Width="40" />
                                <TableColumn />
                            </Table.Columns>
                            <TableRowGroup>
                                <i:Interaction.Behaviors>
                                    <behave:MessagesBehavior Messages="{Binding Messages, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </i:Interaction.Behaviors>
                            </TableRowGroup>
                        </Table>
                    </FlowDocument>
                    <i:Interaction.Behaviors>
                        <behave:ScrollBehavior AutoScroll="{Binding ShouldScroll}" 
                                              IsScrollTop="{Binding IsScrollTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <behave:FindBehavior ShouldFind="{Binding ShouldFind}"/>
                        <behave:PrintBehavior ShouldPrint="{Binding ShouldPrint}"/>
                    </i:Interaction.Behaviors>
                </FlowDocumentScrollViewer>
            </Border>
        </DockPanel>
    </DockPanel>
</Window>
